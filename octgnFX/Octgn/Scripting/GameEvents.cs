/* 
 * This file was automatically generated by Jesus!
 * Do not modify, or your sins will be regenerated!!
 * XML: C:\Programming\OCTGN\octgnFX\Octgn.Library\Scripting\GameEvents.xml
 *
 * To create the .CS file for this document, 
 * right click the .tt file and click 'Run Custom Tool'
 */
using System;
using System.Collections.Generic;
using System.IO;
using System.Net.Sockets;
using Octgn.Play;

namespace Octgn.Scripting
{
	public class GameEventProxy
	{
	    private readonly Engine engine;
	    
	    public GameEventProxy(Engine scriptEngine)
		{
			engine = scriptEngine;
		}
	
		public void OnTableLoad()
		{
			    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnTableLoad"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnTableLoad"])
				{
					engine.ExecuteFunction(e.PythonFunction);
				}
		  	}
		}

		public void OnGameStart()
		{
			    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnGameStart"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnGameStart"])
				{
					engine.ExecuteFunction(e.PythonFunction);
				}
		  	}
		}

		public void OnLoadDeck(Player player, Group[] groups)
		{
			var args = new object[2];
			args[0] = player;
			args[1] = groups;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnLoadDeck"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnLoadDeck"])
				{
					engine.ExecuteFunction(e.PythonFunction,player, groups);
				}
		  	}
		}

		public void OnChangeCounter(Player player, Counter counter, int oldValue)
		{
			var args = new object[3];
			args[0] = player;
			args[1] = counter;
			args[2] = oldValue;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnChangeCounter"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnChangeCounter"])
				{
					engine.ExecuteFunction(e.PythonFunction,player, counter, oldValue);
				}
		  	}
		}

		public void OnEndTurn(Player player)
		{
			var args = new object[1];
			args[0] = player;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnEndTurn"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnEndTurn"])
				{
					engine.ExecuteFunction(e.PythonFunction,player);
				}
		  	}
		}

		public void OnTurn(Player player, int turnNumber)
		{
			var args = new object[2];
			args[0] = player;
			args[1] = turnNumber;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnTurn"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnTurn"])
				{
					engine.ExecuteFunction(e.PythonFunction,player, turnNumber);
				}
		  	}
		}

		public void OnTargetCard(Player player, Card card, bool isTargeted)
		{
			var args = new object[3];
			args[0] = player;
			args[1] = card;
			args[2] = isTargeted;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnTargetCard"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnTargetCard"])
				{
					engine.ExecuteFunction(e.PythonFunction,player, card, isTargeted);
				}
		  	}
		}

		public void OnTargetCardArrow(Player player, Card fromCard, Card toCard, bool isTargeted)
		{
			var args = new object[4];
			args[0] = player;
			args[1] = fromCard;
			args[2] = toCard;
			args[3] = isTargeted;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnTargetCardArrow"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnTargetCardArrow"])
				{
					engine.ExecuteFunction(e.PythonFunction,player, fromCard, toCard, isTargeted);
				}
		  	}
		}

		public void OnMoveCard(Player player, Card card, Group fromGroup, Group toGroup, int oldIndex, int index, int oldX, int oldY, int x, int y, bool isScriptMove)
		{
			var args = new object[11];
			args[0] = player;
			args[1] = card;
			args[2] = fromGroup;
			args[3] = toGroup;
			args[4] = oldIndex;
			args[5] = index;
			args[6] = oldX;
			args[7] = oldY;
			args[8] = x;
			args[9] = y;
			args[10] = isScriptMove;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnMoveCard"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnMoveCard"])
				{
					engine.ExecuteFunction(e.PythonFunction,player, card, fromGroup, toGroup, oldIndex, index, oldX, oldY, x, y, isScriptMove);
				}
		  	}
		}

		public void OnPlayerGlobalVariableChanged(Player player, string name, string oldValue, string Value)
		{
			var args = new object[4];
			args[0] = player;
			args[1] = name;
			args[2] = oldValue;
			args[3] = Value;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnPlayerGlobalVariableChanged"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnPlayerGlobalVariableChanged"])
				{
					engine.ExecuteFunction(e.PythonFunction,player, name, oldValue, Value);
				}
		  	}
		}

		public void OnGlobalVariableChanged(string name, string oldValue, string Value)
		{
			var args = new object[3];
			args[0] = name;
			args[1] = oldValue;
			args[2] = Value;
	    
	        if(Program.GameEngine.Definition.Events.ContainsKey("OnGlobalVariableChanged"))
			{
				foreach(var e in Program.GameEngine.Definition.Events["OnGlobalVariableChanged"])
				{
					engine.ExecuteFunction(e.PythonFunction,name, oldValue, Value);
				}
		  	}
		}
	}
}
